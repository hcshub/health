<?xml version="1.0" encoding="UTF-8" ?>
        <!DOCTYPE mapper
                PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.golday.dao.PackageDao">
    <select id="findPackageByString" parameterType="string" resultType="package">
        select * from t_package
        <where>
            <if test="value != null and value != 'null' and value != ''">
                name like '%${value}%' or code like '%${value}%' or helpCode like '%${value}%'
            </if>
        </where>
    </select>

    <insert id="addPackage" parameterType="package">
        insert into t_package (name,code,helpCode,sex,age,price,remark,attention,img)
        values (#{name},#{code},#{helpCode},#{sex},#{age},#{price},#{remark},#{attention},#{img})
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            select last_insert_id()
        </selectKey>
    </insert>

    <insert id="addPackageCheckgroup" parameterType="int">
        insert into t_package_checkgroup values (#{packageId},#{checkgroupId})
    </insert>

    <select id="findPackage" parameterType="int" resultType="package">
        select * from t_package where id = #{id}
    </select>

    <select id="allCheckGroup" resultType="checkGroup">
        select * from t_checkgroup
    </select>

    <select id="packageIds" parameterType="int" resultType="Integer">
        select checkgroup_id from t_package_checkgroup where package_id = #{id}
    </select>

    <update id="updatePackage" parameterType="package">
        update t_package
        <set>
            name = #{name},
            code = #{code},
            helpCode = #{helpCode},
            sex = #{sex},
            age = #{age},
            price = #{price},
            remark = #{remark},
            attention = #{attention},
            img = #{img}
        </set>
        where id = #{id}
    </update>

    <delete id="deletePackageCheckGroup" parameterType="int">
        delete from t_package_checkgroup where package_id = #{id}
    </delete>

    <select id="findByHotPackage" resultType="map">
        SELECT p.name, COUNT(o.id) `count`,ROUND(COUNT(o.id)/t.total,4) proportion,p.remark
            FROM t_package p,t_order o,(SELECT COUNT(od.id) total FROM t_order od) t
            WHERE p.id = o.package_id
            GROUP BY p.`id`
            ORDER BY COUNT(o.id) DESC
            LIMIT 0,4
    </select>
</mapper>